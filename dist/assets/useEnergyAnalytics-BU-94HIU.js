import{j as e,ai as h,e as k,r as g}from"./index-CeiZKB8G.js";import{c as m}from"./useEnergyStore-rUER5IT3.js";const y={SkeletonPulse:({className:t,energyType:s})=>{const o=h[s]||"#6b7280";return e.jsx("div",{className:`animate-pulse bg-gradient-to-r from-gray-200 via-gray-300 to-gray-200 rounded ${t}`,style:{"--energy-color-faded":`${o}20`}})},SkeletonIcon:({energyType:t,size:s="w-6 h-6"})=>{const o=h[t]||"#6b7280";return e.jsx("div",{className:`relative ${s} rounded-full overflow-hidden`,children:e.jsx("div",{className:"absolute inset-0 rounded-full animate-pulse",style:{background:`linear-gradient(to top right, ${o}40, ${o}20)`}})})},SkeletonButton:({width:t="w-36",energyType:s})=>{const o=h[s]||"#6b7280";return e.jsxs("div",{className:`${t} h-10 rounded-md overflow-hidden relative`,children:[e.jsx("div",{className:"absolute inset-0 animate-pulse bg-gray-200"}),e.jsx("div",{className:"absolute inset-0 animate-pulse opacity-30",style:{background:`linear-gradient(to right, ${o}30, ${o}10)`}})]})},SkeletonChart:({energyType:t,type:s="area",height:o="h-64"})=>{const n=h[t]||"#6b7280";return e.jsxs("div",{className:`w-full ${o} relative overflow-hidden`,children:[e.jsx("div",{className:"absolute inset-0 animate-pulse bg-gray-200"}),e.jsx("div",{className:"absolute bottom-0 left-0 right-0 h-px bg-gray-300"}),e.jsx("div",{className:"absolute top-0 bottom-0 left-0 w-px bg-gray-300"}),[...Array(5)].map((c,l)=>e.jsx("div",{className:"absolute left-0 right-0 h-px bg-gray-300 opacity-50",style:{top:`${20+l*15}%`}},l)),s==="area"&&e.jsx("div",{className:"absolute bottom-0 left-0 right-0 animate-pulse",style:{height:"60%",background:`linear-gradient(to top, ${n}50, transparent)`,clipPath:"polygon(0 100%, 20% 80%, 40% 90%, 60% 60%, 80% 70%, 100% 40%, 100% 100%)"}}),s==="line"&&e.jsx("div",{className:"absolute bottom-0 left-0 right-0 animate-pulse",style:{height:"0",borderTop:`2px solid ${n}`,clipPath:"polygon(0 0, 20% 80%, 40% 30%, 60% 50%, 80% 20%, 100% 70%)"}}),s==="bar"&&e.jsx("div",{className:"absolute bottom-0 left-0 right-0 flex items-end justify-between px-4 h-[60%]",children:[...Array(7)].map((c,l)=>e.jsx("div",{className:"w-8 mx-1 animate-pulse rounded-t",style:{height:`${20+Math.random()*70}%`,backgroundColor:`${n}80`}},l))})]})},EnergyPageSkeleton:({energyType:t,CardComponent:s})=>{const{SkeletonPulse:o,SkeletonIcon:n,SkeletonButton:c,SkeletonChart:l}=y;return e.jsxs("div",{className:"p-6",children:[e.jsx("div",{className:"mb-6",children:e.jsxs("div",{className:"flex justify-between items-center mb-4",children:[e.jsxs("div",{className:"flex items-center gap-2",children:[e.jsx(n,{energyType:t}),e.jsxs("div",{className:"space-y-2",children:[e.jsx(o,{className:"w-48 h-8",energyType:t}),e.jsx(o,{className:"w-24 h-4 opacity-70",energyType:t})]})]}),e.jsxs("div",{className:"flex gap-4 items-center",children:[e.jsx(o,{className:"w-64 h-10 rounded-md",energyType:t}),e.jsx(c,{energyType:t}),e.jsx(c,{energyType:t})]})]})}),e.jsxs("div",{className:"p-6 mb-6",style:{borderRadius:"0.5rem",boxShadow:"0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)"},children:[e.jsxs("div",{className:"space-y-2 mb-6",children:[e.jsx(o,{className:"w-48 h-7",energyType:t}),e.jsx(o,{className:"w-64 h-4 opacity-70",energyType:t})]}),e.jsx(l,{energyType:t})]})]})}},$=m("solar"),E=m("hydro"),C=m("wind"),P=m("biomass"),R=m("geothermal"),Y={solar:$,hydro:E,wind:C,biomass:P,geothermal:R},I=t=>{if(!["solar","hydro","wind","biomass","geothermal"].includes(t))throw new Error(`Invalid energy type: ${t}. Must be one of: solar, hydro, wind, biomass, geothermal`);const s=Y[t];let o;try{o=k()}catch{o={info:()=>{},success:()=>{},error:()=>{},warning:()=>{}},console.log("Toast provider not available")}const n=g.useRef(null),c=s(a=>a.generationData),l=s(a=>a.currentProjection),p=s(a=>a.loading),u=s(a=>a.selectedStartYear),f=s(a=>a.selectedEndYear),r=s(a=>a.additionalData),w=s(a=>a.config),i=s(a=>a.apiError),b=s(a=>a.initialize),x=s(a=>a.setYearRange),j=s(a=>a.setChartRef),v=s(a=>a.handleDownload);g.useEffect(()=>{b(),j(n)},[b,j]),g.useEffect(()=>{if(i&&i.usingMockData)try{o.info(`Using simulated ${t} data for years ${u}-${f}.`)}catch(a){console.log("Error showing toast notification:",a)}},[i]);const N=a=>x(a,f),D=a=>x(u,a),S=()=>v(o);let d={};return t==="solar"?d={irradianceData:r.irradianceData||[],panelPerformance:r.panelPerformance||[]}:t==="hydro"?d={waterFlowData:r.waterFlowData||[],turbineEfficiency:r.turbineEfficiency||[]}:t==="wind"?d={windSpeedData:r.windSpeedData||[],turbinePerformance:r.turbinePerformance||[]}:t==="biomass"?d={feedstockData:r.feedstockData||[],efficiencyData:r.efficiencyData||[]}:t==="geothermal"&&(d={temperatureData:r.temperatureData||[],wellPerformance:r.wellPerformance||[]}),{generationData:c,currentProjection:l,loading:p,selectedStartYear:u,selectedEndYear:f,chartRef:n,config:w,apiError:i,handleStartYearChange:N,handleEndYearChange:D,handleDownload:S,usingMockData:(i==null?void 0:i.usingMockData)||!1,...d}};export{y as S,I as u};
